log:
    file: "./mosdns.log"
    level: error

data_providers:
  - tag: geosite
    file: ./geosite.dat
    auto_reload: true
  - tag: geoip
    file: ./geoip.dat
    auto_reload: true
  - tag: cn
    file: ./cn.dat
    auto_reload: true
  - tag: hosts
    file: ./hosts.txt
    auto_reload: true

plugins:
  # 缓存的插件
  - tag: cache
    type: cache
    args:
      size: 10240
      # 机器上部署了 redis 再开启
      #redis: "redis://127.0.0.1:6379/0"
      lazy_cache_ttl: 86400
      cache_everything: true

  # Hosts的插件
  - tag: hosts
    type: hosts
    args:
      hosts:
        - "provider:hosts"

  # 调整TTL的插件
  - tag: ttl_short
    type: ttl
    args:
      minimal_ttl: 60
      maximum_ttl: 3600
  - tag: ttl_long
    type: ttl
    args:
      minimal_ttl: 300
      maximum_ttl: 3600

  # 屏蔽TYPE65类型请求的插件
  - tag: qtype65
    type: query_matcher
    args:
      qtype: [65]
  - tag: black_hole
    type: blackhole
    args:
      rcode: 0
      ipv4: "127.0.0.1"
      ipv6: "::1"

  # 转发至 AliDNS 的插件
  - tag: forward_ali
    type: fast_forward
    args:
      upstream:
        - addr: "https://dns.alidns.com/dns-query"
          dial_addr: "223.5.5.5"
          trusted: true
          enable_pipeline: true
        - addr: "tls://dns.alidns.com"
          dial_addr: "223.5.5.5"
          trusted: true
          enable_pipeline: true

  # 转发至 DnspodDNS 的插件
  - tag: forward_dnspod
    type: fast_forward
    args:
      upstream:
        - addr: "https://1.12.12.12/dns-query"
          trusted: true
        - addr: "https://120.53.53.53/dns-query"
          trusted: true

  # 转发至本地服务器的插件
  - tag: forward_local
    type: sequence
    args:
      exec:
        - parallel:
          - - "forward_ali"     # 执行序列 #1。
          - - "forward_dnspod"     # 执行序列 #2。
          
  # 转发至 GoogleDNS 的插件
  - tag: forward_google
    type: fast_forward
    args:
      upstream:
        - addr: "https://dns.google/dns-query"
          dial_addr: "8.8.4.4"
          trusted: true
          enable_pipeline: true

  - tag: forward_cloudflare
    type: fast_forward
    args:
      upstream:
        - addr: "https://cloudflare-dns.com/dns-query"
          dial_addr: "1.1.1.1"
          enable_pipeline: true
          trusted: true

  # 转发至远程服务器的插件
  - tag: forward_remote
    type: sequence
    args:
      exec:
        - parallel: # 并行
          - - "forward_google" # 执行序列 #1。
          - - "forward_cloudflare" # 执行序列 #2。

  # 匹配本地域名的插件
  - tag: query_is_local_domain
    type: query_matcher
    args:
      domain:
        - "provider:geosite:cn"
        - "provider:geosite:apple-cn"
        - "provider:geosite:steam@cn"

  # 匹配污染域名的插件
  - tag: query_is_non_local_domain
    type: query_matcher
    args:
      domain:
        - "provider:geosite:geolocation-!cn"

  - tag: response_has_local_ip
    type: response_matcher
    args:
      ip:
        # 使用默认geoip.dat文件
        # - "ext:./geoip.dat:cn"
        # 使用高性能cn.dat文件, 需要下载对应的文件
        - "provider:cn:cn"

#   - tag: query_is_ad_domain
#     type: query_matcher
#     args:
#       domain:
#         - "ext:./geosite.dat:category-ads-all"


  # 匹配RCODE2的插件
  - tag: response_server_failed
    type: response_matcher
    args:
      rcode: [2]

  # 主要的运行逻辑插件
  # sequence 插件中调用的插件 tag 必须在 sequence 前定义
  # 否则 sequence 找不到对应插件
  - tag: main_sequence
    type: sequence
    args:
      exec:
        # 域名映射IP
        - hosts

        # 缓存
        - cache

        # 屏蔽TYPE65类型请求
        - if: qtype65
          exec:
          - black_hole
          - _return

        # 已知的本地域名或CDN域名用本地服务器解析
        - if: query_is_local_domain
          exec:
            - forward_local
            - _return

        # 已知的污染域名用远程服务器解析
        - if: query_is_non_local_domain
          exec:
            - _prefer_ipv4
            - forward_remote
            - _return

        # 剩下的未知域名用IP分流，分流原理请参考fallback的工作流程
          # primary 从本地服务器获取应答，丢弃非本地IP或污染IP的结果
        - primary:
            - forward_local
            - ttl_short
            - if: "(! response_has_local_ip) && [_response_valid_answer]"
              exec:
                - _drop_response
          # secondary 从远程服务器获取应答，无法解析的域名从本地服务器获取应答
          secondary:
            - _prefer_ipv4
            - forward_remote
            - ttl_long
            - if: "response_server_failed"
              exec:
                - forward_local
                - ttl_long
          # 这里建议设置成 local 服务器正常延时的 2~5 倍
          # 这个延时保证了 local 延时偶尔变高时，其结果不会被 remote 抢答
          # 如果 local 超过这个延时还没响应，可以假设 local 出现了问题
          # 这时用就采用 remote 的应答。单位: 毫秒
          fast_fallback: 150

servers:
  - exec: main_sequence
    timeout: 5
    listeners:
      - protocol: udp
        addr: "0.0.0.0:5353"
      - protocol: tcp
        addr: "0.0.0.0:5353"
#      - protocol: http
#        addr: "0.0.0.0:9443"
#        url_path: "/dns-query"
#        get_user_ip_from_header: "X-Forwarded-For"
#       - protocol: tls             
#         addr: "0.0.0.0:853"
#         cert: "/etc/mosdns/cert/test.crt"  # TLS 所需证书文件。
#         key: "/etc/mosdns/cert/test.key"    # TLS 所需密钥文件。
#         idle_timeout: 10          # 连接复用空连接超时时间。单位: 秒。默认: 10。

api:
   http: "0.0.0.0:9080"
